《深，基》p121-128
这里其实不全只有高精乘，高精加
后面我会在去学其他的，主要是其他用的少。

//这里我怕不全，所以有返回来补充这个。可能会讲得不详细

这里的理解你去看书更好，书上有图。

为什么整形中会出现高精问题呢？
主要是因为其表示的范围都是有限。这里我们习惯设个比较大的数组来表示每一位。

1.高精加就是模拟我们写加法的过程（你先自己写写看小学加法），位位相对，并处理进位和除最高位的0（咱们就跟书上一样称这个过程为展平）。

2.高精乘需要详细看一下。

高精乘其实也是模拟乘法的过程，但是由于我们的脑子常常会为我们省略一些步骤，所以会感受不到。

首先我们用i和j分别表示a和b的每个数位

小技巧（与书上不太一样）：我们这里的i和j我建议都从0开始，这样就不用减1

关键性质（模拟过程后发现的）：a[i]*b[j]的贡献全部都在中间产物i+j位上（使用双循环处理），最后在一口气处理所有进位（这个就跟乘法模拟有一点点不同了，因为取模效率低吗，所以我们要考虑一下计算机这个小姑凉，体谅一下她），最后处理进位和除最高位的0（展平）

还有一种技巧：(这个嘚做题，你才能理解得深)
（主要用在  高精*整型 时）
就是将整型整个理解为只有b[0]，我们只需要a[i]*b[0],这样只需单循环就能解决。

在《深，基》p124-125的封装结构体来使用高精，这里是锦上添花，不会也没关系，而且还有挺多需要注意的，就是说不熟练容易错。

你需要的知识：很熟悉函数和结构体（初始化，成员函数）；&取值；重载符号（主要是这个，所以也要熟练）

（看不懂可结合“p2437 蜜蜂路线.cpp”  的题解）

（补充一下，高精往往要数组，那数组设多少个呢，这个问题常常需要去往次方去靠，例如2^998有多少个数位呢？
我们使用的数是十进制，往10去靠，就是  log10(2)*998+1 （理解一下对数运算，我这里略写了）
那该如何去算呢？（问得太好了）
看这个：

https://blog.csdn.net/qq_40788630/article/details/79673539?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167427172316800186565538%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=167427172316800186565538&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-79673539-null-null.142^v71^control_1,201^v4^add_ask&utm_term=c%2B%2Blog%E5%87%BD%E6%95%B0&spm=1018.2226.3001.4187


）

//ok，今天这篇写于除夕，嘻嘻o(*￣▽￣*)ブ求夸（开玩笑的啦）





